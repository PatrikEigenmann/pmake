# ------------------------------------------------------------------------------------
# makefile for the tool pmake. pmake is a tool that reads instructions you give it
# about how to use a compiler of your choice and then automatically runs the compiler
# to build your software projects. Imagine it as a smart assistant that knows exactly
# how to compile and prepare all the pieces of your software, ensuring everything fits
# together correctly without you having to manually run each step. This automation makes
# the development process faster and reduces the chance of errors.
# ------------------------------------------------------------------------------------
# Author: Patrik Eigenmann (p.eigenmann@gmx.net)
# ------------------------------------------------------------------------------------
# Change Log:
# Sat 2024-11-16 File created.                                          Version: 00.01
# Sun 2024-11-17 Changed the configuration to fit the project.          Version: 00.02
# Sun 2025-06-22 Changed the make file into {project.pmake}.            Version: 00.03
# Sun 2025-06-22 Included both Unix and Windows paths.                  Version: 00.04
# ------------------------------------------------------------------------------------

# The compiler used to compile the project. Common compilers used in both Windows and
# MacOS are gcc or clang.
# comp=clang
comp=gcc

# If the project needs to be compile with specific compiler flags (optional).
# For now, I just use it to declare the include path, where the compiler can find
# the header files if there is any.
# UNIX: -I./inlude, Windows: -I./include
flags=-Wall -Wextra -I./include

# Targed binary of the project, either an executive or an object/library file.
# target=obj
target=exec

# Binary path of the project. If no bin path is declared, pmake assumes it is ./bin.
bin=./bin

# Project name, if there is no src file defined, pmake assumes that main.c
# is the file with the main function in it.
# UNIX: ./bin/pmake, Windows: .\bin\pmake
project=pmake

# Source file: Use it if the source filename is different than the project name.
# As example main.c but project is cal.exe.
# UNIX: ./src/pmake.c, Windows: .\src\pmake.c
src=./src/pmake.c

# Libraries to add, or already compiled .o files. Make sure they are properly included.
# UNIX: ./src/lib1.c ./src/lib2.c ./src/lib3.c, Windows: .\src\lib1.c .\src\lib2.c .\src\lib3.c
libs=./src/manpage.c ./src/parse.c ./src/version.c
